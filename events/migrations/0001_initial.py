# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-07-07 15:07
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_register', models.DateTimeField(blank=True, null=True)),
                ('is_registered', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('message', models.TextField()),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime'],
                'verbose_name_plural': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('is_registration_open', models.BooleanField(default=True)),
                ('latest_date_to_register', models.DateField(blank=True, null=True)),
                ('collaborators', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime', 'title'],
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('carreer', models.CharField(blank=True, max_length=200, null=True)),
                ('educational_center', models.CharField(blank=True, max_length=200, null=True)),
                ('english_level', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('twitter_id', models.CharField(blank=True, max_length=200, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('avatar_link', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-pk', 'fullname', 'email'],
                'verbose_name_plural': 'participants',
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('is_registration_open', models.BooleanField(default=True)),
                ('participants', models.ManyToManyField(blank=True, to='events.Participant')),
                ('speaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime', 'title'],
                'verbose_name_plural': 'talks',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(blank=True, through='events.Attendance', to='events.Participant'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Participant'),
        ),
        migrations.AddField(
            model_name='comment',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.Event'),
        ),
        migrations.AddField(
            model_name='comment',
            name='talk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.Talk'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Participant'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together=set([('participant', 'event')]),
        ),
    ]
